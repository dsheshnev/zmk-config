/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        fourth_layer_accord {
            bindings = <&to_rus>;
            key-positions = <51 52>;
            layers = <0>;
        };

        from_rus_to_def {
            bindings = <&from_rus>;
            key-positions = <51 52>;
            layers = <1>;
        };

        hard_sign {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 44>;
            layers = <1>;
        };

        l3_underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <55 56>;
        };
    };

    macros {
        comma_space: comma_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp COMMA &kp SPACE>;

            label = "COMMA_SPACE";
        };

        to_rus: to_rus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &to 1>;
            label = "TO_RUS";
        };

        from_rus: from_rus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &to 0>;
            label = "FROM_RUS";
        };

        ru_glyphs: ru_glyphs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(SPACE) &to 4>,
                <&macro_pause_for_release>,
                <&kp LG(SPACE) &to 1>;

            label = "RU_GLYPHS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC  &kp N7  &kp N5  &kp N3  &kp N1  &kp N9                                         &kp N0  &kp N2     &kp N4     &kp N6   &kp N8    &kp LG(SPACE)
&kp TAB  &kp Q   &kp W   &kp E   &kp R   &kp T                                          &kp Y   &kp U      &kp I      &kp O    &kp P     &kp MINUS
&none    &kp A   &kp S   &kp D   &kp F   &kp G                                          &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&none    &kp Z   &kp X   &kp C   &kp V   &kp B   &none                   &kp BACKSPACE  &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                         &none   &mo 4   &mo 2   &mt LEFT_SHIFT SPACE    &kp SPACE      &mo 3   &kp ENTER  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        russian {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans                    &trans  &trans  &trans     &trans   &trans    &kp LG(SPACE)
&trans  &kp Q   &kp W   &kp E   &kp T       &kp A                     &kp O   &kp U   &kp N      &kp Y    &kp P     &kp LBKT
&trans  &kp R   &kp V   &kp D   &kp F       &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&trans  &kp Z   &kp X   &kp C   &kp B       &kp S   &trans    &trans  &kp I   &kp M   &kp COMMA  &kp DOT  &kp LBKT  &kp BSLH
                        &trans  &ru_glyphs  &mo 2   &trans    &trans  &mo 3   &trans  &trans
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &kp C_BRI_DN  &kp C_BRI_UP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP                    &trans     &trans                &trans                 &trans             &trans  &trans
&kp F1     &kp F2        &kp F3        &kp F4      &kp F5        &kp F6                          &none      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE   &none   &none
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH    &kp DOLLAR    &kp PRCNT                       &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOUBLE_QUOTES  &none   &none
&trans     &trans        &trans        &kp LG(V)   &kp LG(C)     &kp LG(Z)     &trans    &trans  &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE          &none   &none
                                       &trans      &trans        &trans        &trans    &trans  &kp SPACE  &comma_space          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                       &bt BT_CLR   &bt BT_SEL 0        &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3         &bt BT_SEL 4
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                                       &trans       &kp LA(LEFT_ARROW)  &kp LA(DOWN)  &kp LA(UP)        &kp LA(RIGHT)        &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                                       &trans       &kp LEFT            &kp DOWN      &kp UP            &kp RIGHT            &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans          &trans    &kp LA(BACKSPACE)  &kp KP_PLUS  &kp LC(LEFT_ARROW)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &kp BSLH
                        &trans  &trans  &kp LEFT_SHIFT  &trans    &trans             &trans       &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        glyphs {
            bindings = <
&trans       &kp LS(AMPS)  &kp LS(PRCNT)  &kp LS(POUND)  &kp LS(EXCL)  &kp LS(LPAR)                    &kp LS(RPAR)  &kp LS(AT)  &kp LS(DLLR)  &kp LS(CARET)  &kp LS(STAR)  &trans
&kp MINUS    &trans        &trans         &trans         &trans        &trans                          &trans        &trans      &trans        &trans         &trans        &kp MINUS
&kp LS(DQT)  &trans        &trans         &trans         &trans        &trans                          &trans        &trans      &trans        &trans         &trans        &trans
&kp SQT      &trans        &trans         &trans         &trans        &trans        &trans    &trans  &trans        &trans      &trans        &trans         &trans        &trans
                                          &trans         &trans        &trans        &trans    &trans  &trans        &kp BSLH    &trans
            >;
        };
    };
};
